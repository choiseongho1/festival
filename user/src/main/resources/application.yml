server:
  port: 8081  # user-service가 사용하는 포트

spring:
  application:
    name: user-service  # 애플리케이션 이름을 user-service로 설정 (Eureka 등록 시 사용)

  data:
    mongodb:
      uri: mongodb://root:password@localhost:27017/user-db?authSource=admin  # MongoDB 연결 URI (로컬 MongoDB에서 인증을 위한 admin DB 사용)

  config:
    import: "optional:configserver:"  # 외부 Config 서버에서 설정을 가져오도록 설정 (Config 서버가 없으면 생략 가능)

  kafka:
    bootstrap-servers: localhost:9092  # Kafka 서버 주소 (기본 포트는 9092)
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer  # Kafka 키 직렬화 방식
      value-serializer: org.apache.kafka.common.serialization.StringSerializer  # Kafka 값 직렬화 방식

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.value}  # Eureka에 등록되는 고유 인스턴스 ID (애플리케이션 이름과 랜덤 값으로 구성)
    prefer-ip-address: true  # 호스트 이름 대신 IP 주소를 사용하여 Eureka에 등록

  client:
    register-with-eureka: true  # 이 서비스(user-service)를 Eureka에 등록할지 여부
    fetch-registry: true  # Eureka에서 다른 서비스의 인스턴스를 가져올지 여부
    service-url:
      defaultZone: http://localhost:8761/eureka  # Eureka 서버 URL (기본 포트는 8761)

jwt:
  expiration_time: 86400000  # JWT 토큰 만료 시간 (밀리초 단위, 1일 = 86,400,000 밀리초)
  secret: VlwEyVBsYt9V7zq57TejMnVUyzblYcfPQye08f7MGVA9XkHa  # JWT 서명에 사용할 비밀 키 (보안을 위해 외부 파일 또는 환경 변수로 관리하는 것이 좋음)

management:
  endpoints:
    web:
      exposure:
        include: configprops, env  # /actuator/configprops 및 /actuator/env 엔드포인트 활성화 (설정 속성 및 환경 정보 확인 가능)
